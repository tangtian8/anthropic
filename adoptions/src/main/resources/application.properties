spring.application.name=adoptions
#
spring.sql.init.mode=always
#
spring.datasource.url=jdbc:postgresql://localhost:5432/tangtian
spring.datasource.username=dhis2
spring.datasource.password=dhis2
spring.ai.anthropic.api-key=${anthropicKey}
spring.ai.mistralai.api-key=${mistralKey}

spring.ai.qianfan.api-key=${qianfanKey}
spring.ai.qianfan.secret-key=${qianfanAppId}
spring.ai.qianfan.api-version=V2
spring.ai.qianfan.base-url=https://qianfan.baidubce.com/v2
#spring.ai.qianfan.embedding.options-v2.model=ernie-lite-pro-128k
spring.ai.qianfan.embedding.user_id=tangtian
#spring.ai.qianfan.chat.options-v2.frequency_penalty=1.1
#spring.ai.qianfan.chat.options-v2.temperature=1.1
spring.ai.qianfan.chat.options-v2.model=ernie-lite-pro-128k
#ERNIE??
#
#ernie-x1-turbo-32k
#ernie-speed-pro-128k
#ernie-lite-pro-128k


# ?????????
logging.level.org.springaicommunity.qianfanv2.QianFanChatModel=info
#logging.level.org.springframework.ai.chat=DEBUG
#logging.level.org.springframework.web.client.RestTemplate=DEBUG
#logging.level.org.apache.http.wire=DEBUG
#logging.level.org.apache.http.headers=DEBUG
#logging.level.org.springframework.web.client.DefaultRestClient=DEBUG
#logging.level.org.springframework.web.client=DEBUG
#
spring.ai.postgresml.embedding.create-extension=true
spring.ai.postgresml.embedding.options.vector-type=pg_vector
#1024
#384
spring.ai.vectorstore.pgvector.dimensions=384
spring.ai.vectorstore.pgvector.initialize-schema=true
#
spring.ai.chat.memory.repository.jdbc.initialize-schema=always
#
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#
# HTTP ????
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
server.servlet.encoding.force-request=true
server.servlet.encoding.force-response=true

# Spring HTTP ??
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

# ?????
spring.messages.encoding=UTF-8
